# This Github action encapsulates all the necessary steps to republish
# the latest release of a given repository.
# Reference usage:
#
# name: 'Republish Latest'
# 
# on:
#   push:
#     branches:
#       - main  # Or 'master', depending on repository's default branch
#     paths:
#       - 'Dockerfile'
#   workflow_dispatch:
# 
# jobs:
#   sync:
#     runs-on: ubuntu-latest
#     steps:
#       - name: "Read Secrets"
#         uses: rancher-eio/read-vault-secrets@main
#         with:
#           secrets: |
#             secret/data/github/repo/${{ github.repository }}/github/app-credentials appId | APP_ID ;
#             secret/data/github/repo/${{ github.repository }}/github/app-credentials privateKey | PRIVATE_KEY
#   
#       - name: Generate GitHub App token
#         id: generate-token
#         uses: actions/create-github-app-token@v1
#         with:
#           app-id: ${{ env.APP_ID }}
#           private-key: ${{ env.PRIVATE_KEY }}
#           owner: rancher
#           repositories: |
#            image-build-repo 
#
#       - name: Republish Latest Release
#         uses: rancher/ecm-distro-tools/actions/republish-latest@master
#         with:
#           owner: 'rancher'
#           repo: 'image-build-calico'
#           commitish: 'main'
#           GH_TOKEN: ${{ secrets.YOUR_GITHUB_TOKEN }}

name: 'Republish Latest Release'

inputs:
  repo:
    description: 'The name of the target repository'
    required: true
  owner:
    description: 'The owner of the repository'
    required: false
    default: 'rancher'
  commitish:
    description: 'The branch/commit target'
    required: false
    default: 'master'
  GH_TOKEN:
    description: 'A GitHub token with permissions to create releases in the target repo'
    required: true

runs:
  using: 'composite'
  steps:
    - name: setup ecm-distro-tools
      uses: rancher/ecm-distro-tools@v0.59.0

    - name: 'Generate config file'
      shell: bash
      run: release config gen > ecm-config.json

    - name: 'Run Republish Command'
      env:
        # The token input is passed as an environment variable to the CLI.
        GITHUB_TOKEN: ${{ inputs.GH_TOKEN }}
      shell: bash
      run: |
        release sync republish-latest \
          --image-build-owner "${{ inputs.owner }}" \
          --image-build-repo "${{ inputs.repo }}" \
          --commitish "${{ inputs.commitish }}" \
          --config-file "ecm-config.json"
